AUTORES:
 - Martín Del Río Álvarez          martin.delrio.alvarez@udc.es
 - Mateo Aguirre Cancela           mateo.aguirre@udc.es
 
INTRODUCCIÓN:
    En esta práctica se realizará el análisis del algoritmo de Dijkstra, cuyo fin es calcular las distancias mínimas desde un vértice a todos los demás vértices de un grafo dado.
    Para ello se realizarán pruebas con el fin de validar la implementación y se realizará un análisis empírico de la complejidad computacional del algoritmo,
    que se basará en la generación de grafos completos no dirigidos de manera aleatoria para medir el tiempo de ejecución del algoritmo en diferentes tamaños de grafos.

TEST:
  0  1  8  4  7
  1  0  2  6  5
  8  2  0  9  5
  4  6  9  0  3
  7  5  5  3  0

  0  1  3  4  6
  1  0  2  5  5
  3  2  0  7  5
  4  5  7  0  3
  6  5  5  3  0

  0  1  4  7
  1  0  2  8
  4  2  0  3
  7  8  3  0

  0  1  3  6
  1  0  2  5
  3  2  0  3
  6  5  3  0

ESPECIFIACIONES DE LA MÁQUINA:
	·Modelo: HUAWEI MateBook 14 AMD 2021
	·Procesador: AMD Ryzen 5 5500U
	·Memoria RAM: 8gb
	·Sistema operativo: Linux Ubuntu 22.04.3 LTS
	·Kernel: 6.2.0-33-generic

ACLARACIONES:
	Todas las unidades de tiempo estan medidas en microsegundos.
	El valor de n sigue una progresión geométrica de razón dos.
	Los símbolos (*) colocados a la izquierda de ciertos tiempos indican que el tiempo de ejecución para ese valor de n es inferior a 500 microsegundos. Esto implica que el algoritmo se repitió 1000 (contante k) veces y posteriormente se calculó una media.

TABLAS DE TIEMPOS:

Tabla para demostrar la complejidad de dijkstra O(n):
             n             t(n)     t(n)/n^2.55    t(n)/n^2.825      t(n)/n^3.1
(*)         15        36.229000        0.036310        0.017242        0.008188
(*)         30       263.555000        0.045104        0.017701        0.006947
            60      1850.000000        0.054061        0.017535        0.005687
           120     12601.000000        0.062877        0.016855        0.004518
           240     89761.000000        0.076480        0.016943        0.003753
           480    628189.000000        0.091396        0.016733        0.003064
           960   4691854.000000        0.116561        0.017637        0.002669
-COTAS:
    cota subestimada:  n^2.55
    cota ajustada:     n^2.825
    cota sobrestimada: n^3.1

(#) ANOMALIAS:
    -No se observan anomalías.

-OBSERVACIONES:
	-Los resultados de la cota subestimada nos ofrece unos valores ascendentes.
	-Al contrario ocurre con la sobrestimada, pues estos decrecen.
	-Y la cota ajustada se aproxima 0.017

CONCLUSIONES:
    -Al analizar los datos de la tabla de tiempos para demostrar la complejidad del algoritmo de Dijkstra, se puede observar una tendencia consistente con una complejidad aproximada de O(n^2.825).
    -A medida que el tamaño del grafo aumenta, el tiempo de ejecución se incrementa significativamente, lo que sugiere que el algoritmo de Dijkstra se vuelve más costoso computacionalmente a medida que se manejan grafos más grandes.
    -A pesar de que la cota teórica para el algoritmo de Dijkstra es de O(n^3), el análisis de la complejidad empírica nos proporcionó una complejidad aproximada de O(n^2.825), pero que esta se aproxima a la complejidad teórica al incrementar el valor de n.