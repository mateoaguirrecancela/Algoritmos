  * Algoritmos -> Práctica 4
  * Íker García Calviño <iker.gcalvino> -> grupo 4.4
  * Juan Toirán Freire <juan.tfreire> -> grupo 4.4

# Informe Práctica 4:
  Ordenación rápida:
  Algoritmo de ordenación rápida (quicksort) con selección aleatoria del pivote
  y diferentes umbrales para diferentes tamaños del vector

    1. Características de la máquina:
   --------------------------------------
     OS: Ubuntu 20.04 LTS              
     Kernel: 5.3.0-51-generic            
     CPU: Intel Core i7-9750H a 4'50 GHz 
     Memoria Principal: 8 GB            
   --------------------------------------
     Compilador: gcc 9.3.0

    2. Unidades de medida:
     Los tiempos se expresarán en microsegundos (ms).

    3. Método:
     En esta práctica utilizamos el algoritmo de ordenación rápida para ordenar
     diferentes vectores de tamaños comprendidos entre 500 y 1024000 elementos,
     para todos estos vectores se ha repetido esta misma operación pero cambiando el
     umbral del algoritmo y además la ordenación de los vectores se ha realizado con
     ordenaciones ascendentes, descendentes y aleatorias

     Para esta práctica utilizamos 2 cotas (subestimada y sobreestimada) para llegar
     a los resultados de la cota ajustada.

     k = 1000 <- En caso de que el tiempo de ejecución sea muy pequeño
     se calculará una media de k ejecuciones del algoritmo.

    4. Resultados:
 ~ Ordenación rápida ~

Para un umbral = 1:
  Vector ascendente:
   - Cota subestimada (sub): n
   - Cota ajustada (aj): n^1.07
   - Cota sobreestimada (sob): n^1.25

        n              t(n)          t(n)/sub           t(n)/aj            t(n)/sob
(*)    500            27.5540     0.055108000000     0.035668656334     0.011653923117
(*)   1000            53.0070     0.053007000000     0.032683851264     0.009426125669
(*)   2000           109.4150     0.054707500000     0.032134738440     0.008180679345
(*)   4000           224.8230     0.056205750000     0.031451151307     0.007067498899
      8000           507.0000     0.063375000000     0.033783269153     0.006701090382
     16000           984.0000     0.061500000000     0.031231059447     0.005468209186
     32000          2042.0000     0.063812500000     0.030870613538     0.004771097205
     64000          4337.0000     0.067765625000     0.031230349897     0.004260538113
    128000          9779.0000     0.076398437500     0.033541291315     0.004039075619
    256000         19720.0000     0.077031250000     0.032217374669     0.003424577145
    512000         39104.0000     0.076375000000     0.030430026179     0.002855181579
   1024000         79352.0000     0.077492187500     0.029412837506     0.002436031678
                                              cte. = 0.03
                              (*) Tiempo promedio en 1000 ejecuciones
  Vector descendente:
   - Cota subestimada (sub): n
   - Cota ajustada (aj): n^1.07
   - Cota sobreestimada (sob): n^1.16

        n              t(n)          t(n)/sub           t(n)/aj            t(n)/sob
(*)    500            25.9000     0.051800000000     0.033527553134     0.019164370530
(*)   1000            53.4920     0.053492000000     0.032982899840     0.017712865950
(*)   2000           109.0030     0.054501500000     0.032013735723     0.016152645280
(*)   4000           226.4380     0.056609500000     0.031677078412     0.015016188812
      8000           511.0000     0.063875000000     0.034049803821     0.015164794001
     16000          1121.0000     0.070062500000     0.035579286219     0.014887659684
     32000          2342.0000     0.073187500000     0.035405963225     0.013919156437
     64000          4789.0000     0.074828125000     0.034485161553     0.012737261562
    128000         10743.0000     0.083929687500     0.036847744411     0.012786804080
    256000         23587.0000     0.092136718750     0.038535051538     0.012563607128
    512000         46530.0000     0.090878906250     0.036208805189     0.011091234761
   1024000         96620.0000     0.094396484370     0.035829011228     0.010311167148
                                              cte. = 0.03
                              (*) Tiempo promedio en 1000 ejecuciones
  Vector aleatorio:
   - Cota subestimada (sub): n
   - Cota ajustada (aj): n^1.08
   - Cota sobreestimada (sob): n*log(n)

        n              t(n)          t(n)/sub           t(n)/aj            t(n)/sob
(*)    500            45.9490     0.091898000000     0.055896994802     0.014787416768
(*)   1000            98.1790     0.098179000000     0.056496117608     0.014212865980
(*)   2000           198.4670     0.099233500000     0.054022653191     0.013055489204
(*)   4000           417.5810     0.104395250000     0.053767016617     0.012586764552
      8000           918.0000     0.114750000000     0.055912060224     0.012768163677
     16000          1945.0000     0.121562500000     0.056036373895     0.012557663238
     32000          4679.0000     0.146218750000     0.063766278058     0.014095423367
     64000          8962.0000     0.140031250000     0.057773751313     0.012653458568
    128000         19505.0000     0.152382812500     0.059478387697     0.012957958455
    256000         41655.0000     0.162714843750     0.060085264356     0.013066387442
    512000         80751.0000     0.157716796875     0.055098065549     0.011997249220
   1024000        164737.0000     0.160875976562     0.053170066034     0.011624635941
                                              cte. = 0.05
                              (*) Tiempo promedio en 1000 ejecuciones
Para un umbral = 10:
  Vector ascendente:
   - Cota subestimada (sub): n
   - Cota ajustada (aj): n^1.09
   - Cota sobreestimada (sob): n*log(n)

        n              t(n)          t(n)/sub           t(n)/aj            t(n)/sob
(*)    500            18.0160     0.036032000000     0.020595913939     0.005797952088
(*)   1000            31.7520     0.031752000000     0.017051833598     0.004596572796
(*)   2000            67.2300     0.033615000000     0.016960568919     0.004422501167
(*)   4000           143.6140     0.035903500000     0.017019679908     0.004328826274
(*)   8000           302.6510     0.037831375000     0.016848996008     0.004209474406
     16000           695.0000     0.043437500000     0.018175820434     0.004487185579
     32000          1312.0000     0.041000000000     0.016118341712     0.003952382017
     64000          2960.0000     0.046250000000     0.017082661664     0.004179227556
    128000          6769.0000     0.052882812500     0.018351249810     0.004496919804
    256000         13845.0000     0.054082031250     0.017632398718     0.004342915235
    512000         30971.0000     0.060490234375     0.018528956884     0.004601389526
   1024000         62245.0000     0.060786132812     0.017493532595     0.004392306914
                                              cte. = 0.017
                              (*) Tiempo promedio en 1000 ejecuciones
  Vector descendente:
   - Cota subestimada (sub): n
   - Cota ajustada (aj): n^1.16
   - Cota sobreestimada (sob): n^1.25

        n              t(n)          t(n)/sub           t(n)/aj            t(n)/sob
(*)    500            15.8650     0.031730000000     0.011739101871     0.006710078038
(*)   1000            36.7230     0.036723000000     0.012160128174     0.006530375477
(*)   2000            83.4880     0.041744000000     0.012371696643     0.006242183952
(*)   4000           171.5060     0.042876500000     0.011373384672     0.005391434445
      8000           515.0000     0.064375000000     0.015283500804     0.006806827508
     16000           782.0000     0.048875000000     0.010385503901     0.004345670308
     32000          1746.0000     0.054562500000     0.010376962912     0.004079498394
     64000          3779.0000     0.059046875000     0.010050973365     0.003712375727
    128000          8297.0000     0.064820312500     0.009875464344     0.003426956786
    256000         17561.0000     0.068597656250     0.009353860380     0.003049644992
    512000         38895.0000     0.075966796875     0.009271299721     0.002839921428
   1024000         75516.0000     0.073746093750     0.008055472662     0.002318270090
                                              cte. = 0.0095
                              (*) Tiempo promedio en 1000 ejecuciones
  Vector aleatorio:
   - Cota subestimada (sub): n
   - Cota ajustada (aj): n*log(n)
   - Cota sobreestimada (sob): n^1.2

        n              t(n)          t(n)/sub           t(n)/aj            t(n)/sob
(*)    500            36.4720     0.072944000000     0.011737506025     0.021047260387
(*)   1000            79.1240     0.079124000000     0.011454372195     0.019875050201
(*)   2000           160.7750     0.080387500000     0.010576046782     0.017578528744
(*)   4000           375.3090     0.093827250000     0.011312598076     0.017861461402
      8000           872.0000     0.109000000000     0.012128364625     0.018063774395
     16000          1908.0000     0.119250000000     0.012318777100     0.017204196378
     32000          3936.0000     0.123000000000     0.011857146051     0.015448101554
     64000          8561.0000     0.133765625000     0.012087286186     0.014625426117
    128000         16686.0000     0.130359375000     0.011085183018     0.012407956883
    256000         35301.0000     0.137894531250     0.011073257546     0.011426127077
    512000         67782.0000     0.132386718750     0.010070433142     0.009549715334
   1024000        148631.0000     0.145147460938     0.010488119029     0.009114848442
                                              cte. = 0.01
                              (*) Tiempo promedio en 1000 ejecuciones
Para un umbral = 100:
  Vector ascendente:
   - Cota subestimada (sub): n
   - Cota ajustada (aj): n^1.09
   - Cota sobreestimada (sob): n*log(n)

        n              t(n)          t(n)/sub           t(n)/aj            t(n)/sob
(*)    500             8.9230     0.017846000000     0.010200784862     0.002871621141
(*)   1000            26.2290     0.026229000000     0.014085806987     0.003797036655
(*)   2000            42.6860     0.021343000000     0.010768687266     0.002807956044
(*)   4000            91.1460     0.022786500000     0.010801702793     0.002747331037
(*)   8000           194.0360     0.024254500000     0.010802250082     0.002698783668
(*)  16000           420.4850     0.026280312500     0.010996632885     0.002714811839
     32000           912.0000     0.028500000000     0.011204213142     0.002747387500
     64000          1913.0000     0.029890625000     0.011040247217     0.002700966998
    128000          4397.0000     0.034351562500     0.011920585820     0.002921104503
    256000         12618.0000     0.049289062500     0.016069744097     0.003958028490
    512000         25165.0000     0.049150390625     0.015055413128     0.003738786846
   1024000         48829.0000     0.047684570313     0.013723057323     0.003445609355
                                              cte. = 0.01
                              (*) Tiempo promedio en 1000 ejecuciones
  Vector descendente:
   - Cota subestimada (sub): n
   - Cota ajustada (aj): n^1.16
   - Cota sobreestimada (sob): n^1.22

        n              t(n)          t(n)/sub           t(n)/aj            t(n)/sob
(*)    500             8.6390     0.017278000000     0.006392316487     0.003653852138
(*)   1000            30.7480     0.030748000000     0.010181619723     0.005467853530 <- dato anómalo
(*)   2000            47.8330     0.023916500000     0.007088148782     0.003576350913
(*)   4000            99.0500     0.024762500000     0.006568480122     0.003113719530
(*)   8000           217.3830     0.027172875000     0.006451210204     0.002873181717
(*)  16000           464.4790     0.029029937500     0.006168604177     0.002581167007
     32000          1005.0000     0.031406250000     0.005972994116     0.002348164883
     64000          2167.0000     0.033859375000     0.005763551014     0.002128795502
    128000          4598.0000     0.035921875000     0.005472747385     0.001899137918
    256000         11319.0000     0.044214843750     0.006029061309     0.001965658656
    512000         29544.0000     0.057703125000     0.007042326236     0.002157157441
   1024000         49478.0000     0.048318359375     0.005277936813     0.001518928009
                                              cte. = 0.006
                              (*) Tiempo promedio en 1000 ejecuciones
  Vector aleatorio:
   - Cota subestimada (sub): n
   - Cota ajustada (aj): n^1.09
   - Cota sobreestimada (sob): n*log(n)

        n              t(n)          t(n)/sub           t(n)/aj            t(n)/sob
(*)    500            44.6910     0.089382000000     0.051090807608     0.014382564207
(*)   1000            83.2960     0.083296000000     0.044732600510     0.012058331055
(*)   2000           181.1840     0.090592000000     0.045708518802     0.011918584732
(*)   4000           372.6560     0.093164000000     0.044163423036     0.011232631108
      8000           833.0000     0.104125000000     0.046374251778     0.011585926299
     16000          1708.0000     0.106750000000     0.044668059427     0.011027500674
     32000          3472.0000     0.108500000000     0.042654635995     0.010459352411
     64000          9271.0000     0.144859375000     0.053504512259     0.013089736039
    128000         21635.0000     0.169023437500     0.058654053722     0.014373003392
    256000         40783.0000     0.159308593750     0.051939481178     0.012792857497
    512000         77245.0000     0.150869140625     0.046213208308     0.011476359624
   1024000        154407.0000     0.150788085938     0.043395033936     0.010895701401
                                              cte. = 0.04
                              (*) Tiempo promedio en 1000 ejecuciones
    5. Conclusión:
      Teniendo en cuenta los resultados obtenidos en las tablas de los tiempos del
      anterior algoritmo podemos afirmar que:
    
    > Cuando el valor del umbral es 100 podemos notar un mayor rendimiento en el
    tiempo de ejecución porque se usa inserción en su mayoría
    
    > Con umbral 1 notamos peor rendimiento con tiempos mayores debido a que no
    llega a entrar en la función ord_ins()

    > En la práctica la cota teórica n*log(n) se adecua más a una cota sobreestimada
    que a la cota real que utilizamos